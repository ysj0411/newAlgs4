第一章 基础知识
1.1 机器语言
操作码  操作数   
定义：CPU能直接识别并遵照执行的指令
汇编语言中没有数据类型
CPU是一种微处理器
计算机是由CPU和其他受CPU直接或间接控制的芯片、器件、设备组成的计算机系统。
由于每种微处理器的硬件设计和内部结构不同，就需要不同的电平脉来控制，使它工作。
每一种微处理器都有独特的机器指令集（机器语言）。



1.2 汇编语言的产生
因为机器语言的难于辨别和记忆，汇编语言产生了。
汇编语言的主体是汇编指令
汇编指令易于记忆
编译器将汇编指令编译为机器码，由计算机最终执行



1.3 汇编语言的组成
（1）汇编指令：机器码的助记符，有对应的机器码
（2）伪指令：没有对应的机器码，有编译器执行，计算机不执行。
（3）其他符号：如+、-、*、/等，有编译器识别，没有对应的机器码。
汇编语言的核心是汇编指令，它决定了汇编语言的特性。


1.4  存储器（内存）
想让一个CPU工作，就必须向它提供指令和数据。
存储器存放指令和数据
存储器的作用仅次于CPU
要灵活利用汇编语言编程，首先要了解CPU是如何从内存中读取信息，以及向内存写入信息。


1.5   指令和数据
指令和数据是应用上的概念。
在内存和磁盘上，两者没有任何区别，都是二进制信息。
CPU在工作时把有的信息看做指令，有的看做的数据。


1.6   存储单元
存储器被划分为若干个单元，每个存储单元从0开始顺序编号。
一个存储单元存储一个字节。
一个字节（Byte）为8bit。
一个存储器有128个存储单元。
微机存储器的容量是以字节为最小单位来计算的。
磁盘的容量单位同内存的是一样的。


1.7   CPU对存储器的读写
CPU要从内存中读取数据，首先要之顶存储单元的地址。
CPU在读写数据时要指明它要对哪一个器件进行操作，进行那种操作。
3类信息交互：
（1） 存储单元的地址（地址信息）；
（2） 器件的选择，读或写的命令（控制信息）；
（3） 读或写的数据（数据信息）；

电子计算机能处理、传输的信息都是电信号，电信号通过导线传送。
计算机中专门有连接CPU和其他芯片的导线，通常称为总线。
总线从物理上来讲，就是一根根导线的集合。
总线从逻辑上分为3类：
（1） 地址总线
（2） 控制总线
（3） 数据总线

要让一个计算机或微处理器工作，应向它输入能够驱动它进行工作的电平信息（机器码）。


1.8 地址总线
CPU通过地址总线来指定存储单元。
地址总线上能传送多少个不同的信息，CPU就可以对多少存储单元进行寻址。
一个CPU有N根地址总线，则可以说这个CPU的地址总线的宽度为N。这样的CPU最多可以寻找2的N次方格内存单元。
地址总线的宽度决定了CPU的寻址能力。


1.9  数据总线
CPU与内存或其他器件之间是通过数据总线来进行的。
数据总线的宽度决定了CPU和外界的数据传送速度。
8根数据总线一次可传送一个8位二进制数据（即一个字节）。
8088CPU的数据总线宽度为8,8086的数据总线宽度为16
数据总线的宽度决定了CPU对其他器件进行数据传送时的一次数据传送量。


1.10  控制总线
CPU对外部的控制是通过控制总线来进行的。
控制总线是一些不同控制线的集合。
控制总线的宽度决定了CPU对外部的控制能力。
每个CPU芯片都有许多管脚，这些管脚和总线相连。



1.11 内存地址空间（概述） 
就是一个CPU可以寻址的内存单元的数量。

1.12  主板
主板上有核心器件和一些主要器件，这些器件通过总线（地址总线，数据总线，控制总线）相连。
这些器件有CPU、存储器、外围芯片组、扩展插槽等。
扩展插槽上一般插有RAM内存条和各类接口卡。

1.13  接口卡
计算器系统中，所有可用程序控制其工作的设备，必须受到CPU的控制。
CPU对外部设备不能直接控制，如显示器、音响，打印机等。
直接控制外部设备进行工作的是插在扩展插槽上的接口卡，从而实现CPU对外设的间接控制。
CPU通过总线向接口卡发送命令，接口卡根据CPU的命令控制外设进行工作。

1.14  各类存储芯片
从读写属性上分为两类：随机存储器（RAM）和只读存储器（ROM）。
随机存储器可读可写，但必须带电存储，关机后存储的内容丢失
只读存储器只能读取不能写入，关机后内容不丢失。
存储器从功能和链接上又可分为以下几类：
● 随机存储器
用于存放供CPU使用的大部分程序和数据，主随机存储器一般由两个位置上的RAM组成，装在主板上的RAM和扩展插槽上的RAM。
● 装有BIOS（基本输入输出系统）的RAM
BIOS是由主板和各类接口卡（如显卡、网卡等）厂商提供的软件系统，可以通过它利用该硬件设备进行最基本的输入输出。在主板和某些接口卡上插有存储相应BIOS的ROM。
●接口卡上的RAM
某些接口卡需要大批量输入、输出数据进行暂时存储，在其上装有RAM。最典型的就是显示卡上的RAM，一般称为显存。显示卡随时将显存中的数据向显示器输出。即我们将需要显示的内容写入显存，就会出现在显示器上。

1.15 内存地址空间
上述的存储器，在物理上是独立的器件，有两点相同。
（1） 都和CPU的总线相连
（2） CPU对它们进行读或写的时候都通过控制线发出内存读取命令。

CPU在操控它们时，把它们都当作内存来对待，把它们总的看作一个由若干个存储单元组成的逻辑存储器，这个逻辑存储器就是内存地址空间。
汇编面对是内存地址空间。
在图1.8中，所有物理存储器被看作一个由若干个存储单元组成的逻辑存储器，每个物理存储器在这个逻辑存储器中占有一个地址段，即一段地址空间。
CPU在这段地址空间中读写数据，实际上就是在对应的物理存储器中读写数据。
内存地址空间大小受CPU地址总线宽度的限制。
8086CPU的地址总线宽度为20，可以传送2的20次个不同的地址信息，即可定位2的20次个内存单元，则8086PC的内存地址空间大小为1MB。
基于一个计算机硬件系统编程时，必须知道这个系统中的内存地址空间分配情况。
想在某类存储器中读写数据时，必须知道它的第一个单元的地址和最后一个单元的地址，才能保证读写操作是在预期的存储器中进行。
不同计算机系统的内存地址空间的分配情况是不同的。
最终运行程序的是CPU，我们用汇编语言编程时，必须要从CPU的角度考虑问题。
对于CPU来说，系统中的所有存储器中的存储单元都处于一个统一的逻辑存储器中，它的容量受CPU寻址能力的限制。
逻辑存储器即是我们所说的内存地址空间。




第二章  寄存器
一个典型的CPU（非具体）由运算器，控制器、寄存器（CPU工作原理）等器件组成。
这些器件与总线相连（外部总线）。
内部总线实现CPU内部各个器件之间的联系，外部总线实现CPU和主板上其他器件的联系。
运算器进行信息处理
寄存器进行信息存储
控制器控制各个器件进行工作
内部总线连接各种器件，在它们之间进行数据的传送
对于一个汇编程序员来说，CPU的主要部件是寄存器。
寄存器是CPU中程序员可以用指令读写的部件。
程序员通过改变各种寄存器中的内容来实现对CPU的控制。
不同CPU，寄存器的个数、结构是不同的。
8086CPU有14个寄存器，每个寄存器都有一个名称。
它们分别是：AX,BX,CX,DX,SI,DI,SP,BP,IP,CS,SS,DS,ES,PSW


2.1 通用寄存器
8086 CPU的所有寄存器都是16位的，可以存放两个字节。
AX、BX、CX、DX这4个寄存器通常用来存放一般性的数据，被称为通用寄存器。
一个16位寄存器可以存放一个16位数据（二进制）。
为了兼容上一代CPU（8位），这4个寄存器可分为两个独立使用的8位寄存器。
AX分为AH和AL
BX分为BH和BL
CX分为CH和CL
DX分为DH和DL


2.2 字在寄存器中的存储
出于对兼容性的考虑，8086CPU可以一次性处理以下两种尺寸的数据
字节：记为byte，一个字节由8个bit组成，可以存在8个寄存器中
字：记作word，一个字由两个字节组成，这两个字节分别称为这个字的高位字节和低位字节。

2.3  几条汇编指令
mov ax,18 将18送入寄存器AX  AX=18
add ax，8 将寄存器AX中的值加上8 AX=AX+8
mov ax，bx 将寄存器bx中的数据送入寄存器AX  AX=BX

在写一条汇编指令或一个寄存器的名称时不区分大小写。


















